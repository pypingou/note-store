.TH PASS 1 "2012 Oct 05" pingou "Note Store"

.SH NAME
note - stores, retrieves, generates, and synchronizes notes

.SH SYNOPSIS
.B note
[ 
.I COMMAND
] [ 
.I OPTIONS
]... [ 
.I ARGS
]...

.SH DESCRIPTION

.B note 
is a very simple notes store that keeps your notes files inside a simple
directory tree residing at 
.IR ~/.note-store .
The
.B note
utility provides a series of commands for manipulating the notes store,
allowing the user to add, remove, edit, synchronize, and manipulate
notes.

If no COMMAND is specified, COMMAND defaults to either
.B show
or
.BR ls ,
depending on the type of specifier in ARGS. Otherwise COMMAND must be one of
the valid commands listed below.

Several of the commands below rely on or provide additional functionality if
the note store directory is also a git repository. If the note store
directory is a git repository, all note store modification commands will
cause a corresponding git commit. See the \fIEXTENDED GIT EXAMPLE\fP section
for a detailed description using \fBinit\fP and
.BR git (1).

There is a corresponding bash completion script for use with tab completing
note names in
.BR bash (1).

.SH COMMANDS

.TP
\fBls\fP \fIsubfolder\fP
List names of notes inside the tree at
.I subfolder
by using the
.BR tree (1)
program. This command is alternatively named \fBlist\fP.
.TP
\fBshow\fP \fInote-name\fP
Decrypt and print a note named \note-name\fP. 
.TP
\fBinsert\fP [ \fI--force\fP, \fI-f\fP ] \fInote-name\fP
Insert a new note into the note store called \fInote-name\fP. This will
read the new note from standard in until EOF or Ctrl+D is reached.
Prompt before overwriting an existing password, unless \fI--force\fP or \fI-f\fP is specified.
.TP
\fBedit\fP \fInote-name\fP
Insert a new note or edit an existing note using the default text editor specified
by the environment variable \fIEDITOR\fP or using
.BR vi (1)
as a fallback.
.TP
\fBrm\fP [ \fI--recursive\fP, \fI-r\fP ] [ \fI--force\fP, \fI-f\fP ] \fInote-name\fP
Remove the note named \fInote-name\fP from the note store. This command is
alternatively named \fBremove\fP or \fBdelete\fP. If \fI--recursive\fP or \fI-r\fP
is specified, delete note-name recursively if it is a directory. If \fI--force\fP
or \fI-f\fP is specified, do not interactively prompt before removal.
.TP
\fBgit\fP \fIgit-command-args\fP...
If the password store is a git repository, pass \fIgit-command-args\fP as arguments to
.BR git (1)
using the password store as the git repository. If \fIgit-command-args\fP is \fBinit\fP,
in addition to initializing the git repository, add the current contents of the password
store to the repository in an initial commit.
.TP
\fBhelp\fP
Show usage message.
.TP
\fBversion\fP
Show version information.

.SH SIMPLE EXAMPLES

.TP
List existing note in store
.B zx2c4@laptop ~ $ note 
.br
Note Store
.br
\[u251C]\[u2500]\[u2500] TODO 
.br
\[u2502]   \[u251C]\[u2500]\[u2500] SendEmailsList 
.br
\[u2502]   \[u2514]\[u2500]\[u2500] Groceries 
.br
\[u251C]\[u2500]\[u2500] Address 
.br
\[u2502]   \[u251C]\[u2500]\[u2500] Mum 
.br
\[u2502]   \[u2514]\[u2500]\[u2500] Darling 
.br
\[u2514]\[u2500]\[u2500] Conference 
.br
    \[u251C]\[u2500]\[u2500] FUDConEMEA2011 
.br
    \[u251C]\[u2500]\[u2500] FOSDEM2011 
.br
    \[u2514]\[u2500]\[u2500] FOSDEM2011  
.br

.br
Alternatively, "\fBnote ls\fP".
.TP
Show existing notes
.B zx2c4@laptop ~ $ pass Address/Darling 
.br
I'm not going to tell you 
.TP
Add note to store
.B zx2c4@laptop ~ $ note insert Conference/FUDConEMEA2011 
.br
Enter contents for Conference/FUDConEMEA2011 and press Ctrl+D when finished:
.br
 
.br
It was awesome!
.br
Paris is magic
.r
^D
.TP
.TP
Remove note from store
.B zx2c4@laptop ~ $ pass remove Conference/FUDConEMEA2011 
.br
Are you sure you would like to delete test2? [y/N] y
.br
removed \[u2018]/home/pingou/.note-store/test2.txt\[u2019]

.SH EXTENDED GIT EXAMPLE
Here, we initialize new note store, create a git repository, and then manipulate and sync passwords. 
Make note of the arguments to the first call of \fBnote git push\fP; consult
.BR git-push (1)
for more information.

.B zx2c4@laptop ~ $ note git init 
.br
Initialized empty Git repository in /home/pingou/.note-store/.git/
.br
[master (root-commit) 998c8fd] Added current contents of note store.
.br
 1 file changed, 1 insertion(+)

.B zx2c4@laptop ~ $ note git remote add origin example.com:note-store 

.B zx2c4@laptop ~ $ note insert Conference/FUDConNA2012
.br
mkdir: created directory \[u2018]/home/pingou/.note-store/Conference\[u2019] 
.br
Enter contents of Conference/FUDConNA2012 and press Ctrl+D when finished:
.br
 
.br
This is in January 13 to 15th
.br
^D
[master 3123966] Added given note for Conference/FUDConNA2012 to store.
.br
 1 file changed, 1 insertion(+)
.br
 create mode 100644 Conference/FUDConNA2012.txt
.bd

.B zx2c4@laptop ~ $ pass git push -u --all
.br
Counting objects: 4, done. 
.br
Delta compression using up to 2 threads. 
.br
Compressing objects: 100% (3/3), done. 
.br
Writing objects: 100% (4/4), 921 bytes, done. 
.br
Total 4 (delta 0), reused 0 (delta 0) 
.br
To example.com:note-store 
.br
* [new branch]      master -> master 
.br
Branch master set up to track remote branch master from origin. 

.B zx2c4@laptop ~ $ pass rm Conference/FUDConNA2012 
.br
Are you sure you would like to delete Conference/FUDConNA2012? [y/N] y 
.br
removed \[u2018]/home/pingou/.note-store/Conference/FUDConNA2012.txt\[u2019] 
.br
[master f43094c] Removed Conference/FUDConNA2012 from store. 
.br
 1 file changed, 1 deletion(-)
.br
 delete mode 100644 Conference/FUDConNA2012.txt

.B zx2c4@laptop ~ $ pass git push
.br
Counting objects: 9, done. 
.br
Delta compression using up to 2 threads. 
.br
Compressing objects: 100% (5/5), done. 
.br
Writing objects: 100% (7/7), 1.25 KiB, done. 
.br
Total 7 (delta 0), reused 0 (delta 0) 
.br
To example.com:pass-store

.SH FILES

.TP
.B ~/.note-store
The default note storage directory.

.SH ENVIRONMENT VARIABLES

.TP
.I NOTE_STORE_DIR
Overrides the default password storage directory.
.TP
.TP
.I NOTE_STORE_GIT
Overrides the default root of the git repository, which is helpful if
\fINOTE_STORE_DIR\fP is temporarily set to a sub-directory of the default
password store.
.TP
.I EDITOR
The location of the text editor used by \fBedit\fP.

.SH SEE ALSO
.BR git (1),

.SH AUTHOR
.B node
was adapted by
.MT pingou@pingoured.fr
Pierre-Yves Chibon
.ME.
from code written by
.MT Jason@zx2c4.com
Jason A. Donenfeld
.ME .
For updates and more information, a project page is available on the
.UR http://\:github.com/\:pypingou/\:note-store
World Wide Web
.UE .

.SH COPYING
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
